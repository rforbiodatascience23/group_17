---
title: "Cleaning of data"
format: html
editor: visual
---

## Cleaning of data

```{r}
protein_data <- read_table("../data/protein_load.tsv")
clinical_data <- read_table("../data/clinical_load.tsv") 
PAM50_file <- read_table("../data/PAM50_load.tsv")
```

```{r}
# Removal of negative controls
samples <- protein_data |>
  select(-c(RefSeq_accession_number,gene_symbol,gene_name)) |>  
          # Remove columns with the names: "RefSeq_accession_number,gene_symbo
          # ,gene_name"
  colnames() |>
          # Returns all colnames in a list
  str_subset(pattern = regex("TCGA$"))
          # Removes all columns that does not contain TCGA as their last letters. THis is because the dataset have 3 controls, named: "263d3f-I.CPTAC" "blcdb9-I.CPTAC" "c4155b-C.CPTAC"

#Creation of the count_matrix
count_matrix_1 <- protein_data |>
  select(RefSeq_accession_number, all_of(samples)) |>
          # Creating a subset with  RefSeq_accession_number and all samples,
          # excluding the control samples
  mutate(
    across(everything(), ~replace_na(.x, 0)))|>
          # replace all NA values in the count-matrix with 0
  pivot_longer(cols = -c("RefSeq_accession_number")) |> 
          # Transfroms the dataset to a pivot longer with sample ID as names and
          # values as expression counts
  mutate(name = str_extract(name, "[^.]+"),
         name = str_replace(name, "-", "_"),
         name = str_c("TCGA", name, sep = "_")) |>
           # Removing everyting after the first "." in the name column. 
           # "C8-A130.02TCGA" becomes "C8-A130", a "-" becomes a "_"
  pivot_wider(names_from = name, values_from = value, values_fn = {list}) |>
         # Transforms the dataset back to a pivot wider with columns as sample ID 
         # and values as expression counts
  unnest(cols = -c("RefSeq_accession_number")) |> 
        # We unnest the dataset
  distinct(RefSeq_accession_number,.keep_all = TRUE) |>
  rename(id = "RefSeq_accession_number")

```

Define list of patients that are in the count matrix (we have proteomics data from)

```{r}
list_of_patients <- count_matrix_1 |>
  colnames() |>
  str_subset(pattern = regex("TCGA"))
```

Renaming the clincal data set and filtering for only the patent ID's that are in the count matrix.

```{r}
clinical_data_final <- clinical_data |>
  rename(id = "Complete TCGA ID") |>
          # renames "Complete TCGA ID" to id
  mutate(id = str_replace_all(id, "-", "_")) |>
          # mutates the ids to having to -, but only _
  rename_with( ~ str_to_lower(str_replace_all(.x, " ", "_"))) |> 
  rename(pam50 = pam50_mrna)|> #rename for the same of ease later on
  filter(id %in% colnames(count_matrix_1))# include only Id that are in our count matrix
  
clinical_data_final <- clinical_data_final |>
  filter(id %in% list_of_patients)
```

```{r}
write_tsv(clinical_data_final, "../data/clinical_data.tsv")

write_tsv(count_matrix_1, "../data/count_matrix_1_77.tsv")

#write_tsv(count_matrix_2, "../data/count_matrix_2_80.tsv")

write_tsv(PAM50_file, "../data/PAM50_file.tsv")
```

```{r}
rm(list = ls())
```
