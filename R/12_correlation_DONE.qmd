---
title: "08_correlation"
format: html
editor: visual
---

## Correlation of 4 subgroups with ER, PR and HER2 from the clinical dataset

```{r}
#| label: load packages and data
library(tidyverse)
library(corrr)
library(ggplot2)
library(reshape)
library(purrr)
#library(rcompanion)
library(patchwork)
library(readr)
source("99_proj_func.R")

full_data <- read.table("../data/full_data.tsv", header = T)
clinical_data <- read_delim("../data/clinical_load.tsv")
HER2 <- read_table("../data/diff_exp_HER2.tsv")
Luminal_A <- read_table("../data/diff_exp_Luminal_A.tsv")
Luminal_B <- read_table("../data/diff_exp_Luminal_B.tsv")
Basal_like <- read_table("../data/diff_exp_Basal_like.tsv")
cts <- read.table("../data/count_matrix_1_77.tsv", header = T)
protein_IDs <- read_delim("../_raw/77_cancer_proteomes_CPTAC_itraq.csv", delim = ";")
```

### One-out-of-k encoding for the 4 subgroups

We will use the binary encoded pam 50 classes for correlation, so from the single column pam50 with 4 classes we create 4 columns, one for each class, where it says 1 for the observation being in the respective class and 0 for not.

```{r}
#| label: analysis
corr_kendall <- full_data |> 
      select(c("er_status","pr_status", "her2_final_status", "DGEA_HER2", "DGEA_Luminal_A", "DGEA_Luminal_B", "DGEA_Basal_like")) |>
  drop_na() |>
  correlate(method = "kendall") |>
  focus(er_status, pr_status, her2_final_status)
```

### Visualize the correlation in a correlation matrix

For the geom tile function in ggplot2 a long data table is needed, so ER, PR and her2 status are pivoted to the single column status.

```{r}
#| label: analysis
c<- corr_kendall |> 
  dplyr::rename(subclass = term) |>  
  pivot_longer(ends_with("status"), 
               names_to = "status", 
               values_to = "corr") |> 
#For better readability later on, the column values in subclass and status are recoded, basically just renamed, to have them in the tile plot like this.
  mutate(
    subclass = recode(subclass, 
                      "DGEA_HER2" = "HER2", 
                      "DGEA_Luminal_A" = "Luminal A",
                      "DGEA_Luminal_B" = "Luminal B",
                      "DGEA_Basal_like" = "Basal-like"),
    status = recode(status, 
                    "er_status" = "Estrogen", 
                    "pr_status" = "Progesteron",
                    "her2_final_status" = "her2"),
#The columns subclass and status are converted to factors, with levels being the unique values of the columns in the order they appear in.
    subclass = factor(subclass, levels = unique(subclass)),
    status = factor(status, levels = unique(status))
  )


#Creating the plot from the correlation of the clinical data about the subclasses
  Corr_subclasses <- ggplot(c, aes(x = subclass, y = status, fill = corr)) +
   geom_tile(height=0.8, width=0.8) +
#adding the correlation (corr) values to the plot as a label aesthetic, printing the values as strings with two decimal places (sprintf("%2.f").
    geom_text(aes(label = str_c(round(corr,2))), color = "black", size = 3) +
  scale_fill_gradient2(low="blue", mid="white", high="red") +
  theme_minimal() +
#the aspect  ratio of the tiles is set to 1 by coord_equal, so both sides have the same length
  coord_equal() +
  labs(title = "Correlation matrix of tumor subclasses and ER, PR and her2 status", x = "Subclass", y = "Status", fill = "Correlation") +
#size the title and the texts at the x and y axis, adjust them vertically and horizontally, display them in a 45 degree angle
  theme(plot.title = element_text(hjust = 0.4, size = 13),
        axis.text.x = element_text(size = 8, angle = 45, vjust = 1, hjust = 1, margin = margin(-3, 0, 0, 0)),
        axis.text.y = element_text(size = 8, margin = margin(0, -3, 0, 0)),
#remove grid lines
        panel.grid.major = element_blank())
  
Corr_subclasses
  

ggsave("../results/Corr_subclasses.png", Corr_subclasses , height = 4, width = 6)

           

```

## Correlation matrix for sign. protein expression vs. HER2, PR, ER

### Load differential expression data.

Until now only the clinical data has been analyzed in a correlation matrix. Now it would be interesting to see, what the proteins that came out as significantly differently expressed in the four pam50-classes, are usually associated with. What do they do? Are they associated with the occurrences of proestrogen or estrogen receptors or HER2? This will only show us a correlation and no causality, however it may give an interesting outlook and ideas for further exploration.

```{r}
#| label: augmentation
#The proteins are now displayed as rows of the first column, but we need the proteins to be in columns, so that we can join the two datasets by the sample ID, so the protein names are first pivoted to a longer format and the IDs are then pivoted into a wider format. The ID column has automatically been named variable, and is now renamed id again.
cts <- cts |> pivot_longer(cols = -id, names_to = 'variable', values_to = 'value') |> 
  pivot_wider(names_from = id, values_from = value) |>   
  dplyr::rename(id = variable) |>
  left_join(full_data |> select(-starts_with("NP")), by = c("id"))
```

### Extract significant proteins

Now we have the merged datasets with protein expressions and subclass as well as PR/ER and her2 status data for every sample, however we will only look at the proteins that were significant in the differential expression analysis. To obtain these proteins as character vectors, the expression analysis dataset is filtered for only the significant (p-value equal to or lower than 0.05) values, then the first column is pulled, which are the protein IDs.

```{r}
#| label: augmentation
HER2_sign <- HER2 |>
  filter(adjusted_fdr < 0.05) |> 
  pull(protein)

Basal_like_sign <- Basal_like |>
  filter(adjusted_fdr < 0.05) |> 
  pull(protein)

Luminal_A_sign <- Luminal_A |>
  filter(adjusted_fdr < 0.05) |> 
  pull(protein)

Luminal_B_sign <- Luminal_B |>
  filter(adjusted_fdr < 0.05) |> 
  pull(protein)

#Sign_proteins <- reduce(list(HER2_sign, Basal_like_sign, Luminal_A_sign, Luminal_B_sign), union)

#length(Sign_proteins)
```

### Retrieve names of significant proteins (Mapping)

We can also obtain a list of the protein names by transforming the protein ID vector into a column of a dataframe and joining it with the ID to gene dictionary by the RefSeq_accession_number (which is for some reason called as the dataframe name, and has to be stated to be equal to the RefSeq number). This knowledge can be used later to interpret the correlations of the proteins.

```{r}
#| label: augmentation
protein_mapping <- protein_IDs |> 
  select(RefSeq_accession_number, gene_symbol, gene_name) # gene_symbol & gene_name has been changed from Protein.names, Gene.Names because my dataset 


HER2_mapping <- HER2_sign |> 
  data.frame() |> 
  left_join(protein_mapping, by = c("HER2_sign" = "RefSeq_accession_number"))

Basal_like_mapping <- Basal_like_sign |> 
  data.frame() |> 
  left_join(protein_mapping, by = c("Basal_like_sign" = "RefSeq_accession_number"))

Luminal_A_mapping <- Luminal_A_sign |> 
  data.frame() |> 
  left_join(protein_mapping, by = c("Luminal_A_sign" = "RefSeq_accession_number"))

Luminal_B_mapping <- Luminal_B_sign |> 
  data.frame() |> 
  left_join(protein_mapping, by = c("Luminal_B_sign" = "RefSeq_accession_number"))
```

## Create separate correlation matrices for the 4 pam50 classes' significant proteins with the PR, ER and her2 status

### Her2 class

From the full dataset with all significant protein expressions and the clinical data we extract only the columns with ER, PR, her2 and the HER2-class's significant proteins.

```{r}
#| label: results and save plots
Her2_prot <- cts |>
  select(c("id", "er_status", "pr_status", "her2_final_status",HER2_sign)) |> 
  drop_na()

#Do the correlation on these columns, set the focus on the 3 statuses. This means that we dont need to correlate everything with everything, but everything else (in this case the proteins) with the statuses.
Her2_corr <- correlate(Her2_prot, method = "kendall") |>
  focus(er_status, pr_status, her2_final_status)

#Rename the automatically named column term to protein.
#For the tile plot we need the long format, so the statuses are pivoted into one column, and their correlation values are put into the "corr" column. The statuses are renamed so that they will be nicer to read in the plot. Finally, the statuses are transformed to levels.
Her2_corr <- Her2_corr |> 
  dplyr::rename(Protein = term) |>   
  pivot_longer(cols = ends_with("status"),
               names_to = "status", 
               values_to = "corr") |> 
  mutate(
    status = recode(status, 
                      "er_status" = "Estrogen", 
                      "pr_status" = "Progesteron",
                      "her2_final_status" = "her2"),
    status = factor(status, levels = unique(status)))

#For the plot, see explanation in lines 106-120.
Her2_plot <- Her2_corr |>
  ggplot(aes(x = status, y = Protein, fill = corr)) +
  geom_tile(height=0.8, width=0.8) +
    geom_text(aes(label = round(corr,2)), color = "black", size = 3) +
  scale_fill_gradient2(low="blue", mid="white", high="red", limits = c(-1,1)) +
  theme_minimal() +
  coord_equal() +
  labs(title = "HER2-positive", x = "Status", y = "Protein", fill = "Correlation") +
  theme(plot.title = element_text(hjust = 0.4, size = 12),
        axis.text.x = element_text(size = 8, angle = 45, vjust = 1, hjust = 1, margin = margin(-3, 0, 0, 0)),
        axis.text.y = element_text(size = 8, margin = margin(0, -3, 0, 0)),
        panel.grid.major = element_blank())


Her2_plot


ggsave("../plots/corr_Her2.png", Her2_plot, height = 6, width = 5)

```

```{r}
#| label: results save plots
# To reduce redundancy, we will call the results correlation plot from the function file. The second input is all the genes that are significant for the respective test. 

Luminal_A_plot <- corr_plot(cts, head(Basal_like_sign,5)) + 
  labs(title = "Luminal A", x = "Status", y = "Protein", fill = "Correlation")
Luminal_B_plot <- corr_plot(cts, Luminal_B_sign) + 
  labs(title = "Luminal B", x = "Status", y = "Protein", fill = "Correlation")
Basal_like_plot <- corr_plot(cts, head(Basal_like_sign,5)) + 
  labs(title = "Basal Like", x = "Status", y = "Protein", fill = "Correlation")

p4 <-(Basal_like_plot + Her2_plot) / (Luminal_A_plot + Luminal_B_plot)+
  plot_layout(guides = 'collect') +
  plot_annotation(title = "Correlation of PR, ER and her2 status with significant proteins", 
        subtitle = "Using top 5 most significant proteins for each PAM50 classification")&
  theme(
    plot.title = element_text(size = 16, hjust = 0.5), # Adjust title size and horizontal position
    plot.subtitle = element_text(size = 14, hjust = 0.5) # Adjust subtitle size and horizontal position
  )

plot(p4)
ggsave("../results/Protein_corr_4p.png", p4 , height = 8, width = 10)
```

```{r}
#| label: load packages and data
#quarto::quarto_render("12_correlation_DONE.qmd",output_format = "html",execute = T)
#file.rename(from = "12_correlation_DONE.html",
#            to = "../results/12_correlation_DONE.html")
```

```{r}
rm(list = ls())
```
