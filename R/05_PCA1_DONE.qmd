---
title: "05_PCA"
format: html
editor: visual
---

# Clustering analysis with all proteomics data

## Principal component analysis (PCA)

It was investigated if the data set would show any clustering resembling that of the PAM50 criteria, based on the entire proteomics data set. First a PCA analysis was conducted.

First, required packages were loaded.

```{r}
#| echo: false
#| label: load packages

library(tidyverse)
library(broom)
library(cowplot)

```

Next, the required data was loaded. For this analysis it was the count matrix, which was transformed (rows to columns and vice versa), and the clinical data.

```{r}
#| label: load data (and augment)

cm <- read.table("../data/count_matrix_1_77.tsv", header = T) |>
  pivot_longer(cols = -id, names_to = 'variable', values_to = 'value') |>
  pivot_wider(names_from = id, values_from = value) |>
  rename(id = variable) |>
  column_to_rownames('id')

clinical_data <- read.table("../data/clinical_data.tsv", sep = "\t", header = T)
```

Next, the PCA was done by first scaling the count matrix, and then the doing the actual principal component analysis using the prcomp() function. From the pca output, information about the variance-explanation by each principel component was extracted and stored in the pca_results using the tidy() function.

```{r}
#| label: define PCA

pca <- cm |> 
  prcomp(center=T, scale=T) # transform data with to principal components

#Extract variance explained by the PCs
pca_results <- pca |>
  broom::tidy("pcs") |> # Using the tidy function from the broom package to extract results
  pluck("percent") # extracting the expained varaince of each PC

  
```

These variables, were used for creating a visual presentation of the principal component analysis, in the form of a classic PCA plot of the first to principal components. Here the individual samples were coloured based on their pam50 classification.

```{r}
#| label: PCA plot

# Create PCA plot
pca_plot <- pca |> 
  pluck("x") |> 
  data.frame() |> 
   ggplot(aes(x=PC1, 
              y=PC2, 
              color = clinical_data |> pull("pam50"), # color by pam50 column from cli clinical dataset
              fill = clinical_data |> pull("pam50"))) + # filling by pam50 column from cli clinical dataset
   geom_point(shape = 21,
             size = 3, 
             alpha = 0.5) +
   theme_bw(base_size = 12) + # font size of text
   background_grid() +
   xlab(str_c('PC1 ', pluck(pc_var,1)*100, '% explained variance')) + 
   ylab(str_c('PC2 ', pluck(pc_var,2)*100, '% explained variance')) +
   labs(
     title = "PCA on entire proteomics dataset",
     color = "pam50",
     fill = "pam50"
        )
pca_plot
ggsave("../plots/PCA1.png", pca_plot, height = 4, width = 6)

# print PCA plot


```

In this PCA based on all the proteomics data, we see no obvious clustering.
