---
title: "08_correlation"
format: html
editor: visual
---
```{r}
library(tidyverse)
library(corrr)
library(ggcorrplot)
library(ggplot2)
library(reshape)
library(purrr)
```


## Correlation of 4 subgroups with ER, PR and HER2

Load clinical data 
```{r}
clinical_data <- read.table("../data/clinical_data.tsv", sep = "\t", header = T)
```


One-out-of-k encoding for the 4 subgroups
```{r}
clinical_data <- clinical_data |>
  mutate(
    DGEA_HER2 = case_when(
      pam50 == "HER2-enriched" ~ 1, 
      TRUE ~ 0
    ), 
    DGEA_Luminal_A = case_when(
      pam50 == "Luminal A" ~ 1, 
      TRUE ~ 0
  ), 
    DGEA_Luminal_B = case_when(
      pam50 == "Luminal B" ~ 1, 
      TRUE ~ 0
      ),
    DGEA_Basal_like = case_when(
      pam50 == "Basal-like" ~ 1, 
      TRUE ~ 0)) |> 
  mutate(er_status = as.factor(er_status),  
    er_status = fct_recode(er_status, "0" = "Negative", "1" = "Positive"),  # Recode
    er_status = as.numeric(as.character(er_status))) |> 
  mutate(pr_status = as.factor(pr_status),  
    pr_status = fct_recode(pr_status, "0" = "Negative", "1" = "Positive"),  # Recode
    pr_status = as.numeric(as.character(pr_status))) |> 
  mutate(her2_final_status = as.factor(her2_final_status),  
    her2_final_status = fct_recode(her2_final_status, "0" = "Negative", "1" = "Positive"),  # Recode
    her2_final_status = as.numeric(as.character(her2_final_status)))

clinical_corr <- clinical_data |> 
  select(c("er_status","pr_status", "her2_final_status", "DGEA_HER2", "DGEA_Luminal_A", "DGEA_Luminal_B", "DGEA_Basal_like"))


corr_pearson <- clinical_corr |> 
  correlate() |> 
  focus(er_status, pr_status, her2_final_status)
  
  
corr_kendall <- clinical_corr |> 
  correlate(method = "kendall") |>
  focus(er_status, pr_status, her2_final_status)

  
```


Visualize
```{r}

#matrix <- corr_kendall |> 
#  column_to_rownames(var = "term") |> 
#  as.matrix()

#ggcorrplot(matrix, 
#           ggtheme = ggplot2::theme_light(),
#           lab = TRUE,
#           title = "Correlation matrix of tumor subclasses and her2, progesteron and estrogen status",
#           legend.title = "Correlation",
#           colors = c("blue", "white", "red"))

#print(corr_kendall)

c<- corr_kendall |> 
  dplyr::rename(subclass = term) |>  
  pivot_longer(ends_with("status"), 
               names_to = "status", 
               values_to = "corr") |> 
  mutate(
    subclass = recode(subclass, 
                      "DGEA_HER2" = "HER2", 
                      "DGEA_Luminal_A" = "Luminal A",
                      "DGEA_Luminal_B" = "Luminal B",
                      "DGEA_Basal_like" = "Basal-like"),
    status = recode(status, 
                    "er_status" = "Estrogen", 
                    "pr_status" = "Progesteron",
                    "her2_final_status" = "her2")
  ) |> 
  mutate(
    subclass = factor(subclass, levels = unique(subclass)),
    status = factor(status, levels = unique(status))
  )



  ggplot(c, aes(x = subclass, y = status, fill = corr)) +
  geom_tile(height=0.8, width=0.8) +
    geom_text(aes(label = sprintf("%.2f", corr)), color = "black", size = 3)+
  scale_fill_gradient2(low="blue", mid="white", high="red") +
  theme_minimal() +
  coord_equal() +
  labs(title = "Correlation matrix of tumor subclasses and ER, PR and her2 status", x = "Subclass", y = "Status", fill = "Correlation") +
  theme(plot.title = element_text(hjust = 0.4, size = 12),
        axis.text.x = element_text(size = 8, angle = 45, vjust = 1, hjust = 1, margin = margin(-3, 0, 0, 0)),
        axis.text.y = element_text(size = 8, margin = margin(0, -3, 0, 0)),
        panel.grid.major = element_blank())

           

```


##Correlation matrix for sign. protein expression vs. HER2, PR, Er
Load differential expression data

```{r}
HER2 <- read_table("../data/diff_exp_HER2.tsv")
Luminal_A <- read_table("../data/diff_exp_Luminal_A.tsv")
Luminal_B <- read_table("../data/diff_exp_Luminal_B.tsv")
Basal_like <- read_table("../data/diff_exp_Basal_like.tsv")

```


Load and join clinical and protein data
```{r}

protein_data <- read.table("../data/count_matrix_1_77.tsv", header = T) |> 
  pivot_longer(cols = -id, names_to = 'variable', values_to = 'value') |>
  pivot_wider(names_from = id, values_from = value) |> 
  dplyr::rename(id = variable)


full_data <- clinical_data |> 
  left_join(protein_data, by = "id")
```




Extract significant proteins
```{r}
HER2_sign <- HER2 |>
  filter(adjusted_fdr < 0.05) |> 
  pull(var = 1)

Basal_like_sign <- Basal_like |>
  filter(adjusted_fdr < 0.05) |> 
  pull(var = 1)

Luminal_A_sign <- Luminal_A |>
  filter(adjusted_fdr < 0.05) |> 
  pull(var = 1)

Luminal_B_sign <- Luminal_B |>
  filter(adjusted_fdr < 0.05) |> 
  pull(var = 1)

Sign_proteins <- reduce(list(HER2_sign, Basal_like_sign, Luminal_A_sign, Luminal_B_sign), union)

length(Sign_proteins)
```


```{r}
full_data <- full_data |>
  select(c(id, er_status, pr_status, her2_final_status, DGEA_HER2, DGEA_Luminal_A, DGEA_Luminal_B, DGEA_Basal_like, Sign_proteins)) |> 
  drop_na()


Sign_protein_corr <- correlate(full_data, method = "kendall") |>
  focus(er_status, pr_status, her2_final_status, DGEA_HER2, DGEA_Luminal_A, DGEA_Luminal_B, DGEA_Basal_like)


```


Visualize
```{r}

c2 <- Sign_protein_corr |> 
  dplyr::rename(Protein = term) |>   
  pivot_longer(cols = c(ends_with("status"),starts_with("DGEA")),
               names_to = "category", 
               values_to = "corr") |> 
  mutate(
    category = recode(category, 
                      "DGEA_HER2" = "HER2", 
                      "DGEA_Luminal_A" = "Luminal A",
                      "DGEA_Luminal_B" = "Luminal B",
                      "DGEA_Basal_like" = "Basal-like",
                      "er_status" = "Estrogen", 
                      "pr_status" = "Progesteron",
                      "her2_final_status" = "her2")
  ) |> 
  mutate(
    category = factor(category, levels = unique(category)))







#Try to do it class-wise
corr_protein_kendall <- map(full_data, ~ .x |>  select(where(is.numeric)) |>   # Select only numeric columns
  select_if(~ sd(.x, na.rm = TRUE) != 0) |> 
                             correlate(method = "kendall") |> 
                                  rearrange())

  tatus))
  )


```


Plot corr matrix with proteins
```{r}
  c2plot <- ggplot(c2, aes(x = category, y = Protein, fill = corr)) +
  geom_tile() +
    #geom_text(aes(label = sprintf("%.2f", corr)), color = "black", size = 3)+
  scale_fill_gradient2(low="blue", mid="white", high="red") +
  theme_minimal() +
  labs(x = "category", y = "Protein", fill = "Correlation") +
  theme(plot.title = element_text(hjust = 0.4, size = 5),
        axis.text.x = element_text(size = 3, angle = 45, vjust = 1, hjust = 1, margin = margin(-3, 0, 0, 0)),
       axis.text.y = element_text(size = 3, margin = margin(0, -3, 0, 0)),
        panel.grid.major = element_blank())

ggsave("../plots/corr_mat_ful.png", c2plot, height = 20, width = 4)
```






Create long protein table with ids and expressions
```{r}
protein_long <- read.table("../data/count_matrix_1_77.tsv", header = T) |> 
pivot_longer(cols = -id, names_to = 'Proteins', values_to = 'Expression') 
```





##Create separate corr matrices

Her2 class
```{r}
Her2_prot <- full_data |>
  select(c(id, er_status, pr_status, her2_final_status, HER2_sign)) |> 
  drop_na()


Her2_corr <- correlate(Her2_prot, method = "kendall") |>
  focus(er_status, pr_status, her2_final_status)

Her2_corr <- Her2_corr |> 
  dplyr::rename(Protein = term) |>   
  pivot_longer(cols = ends_with("status"),
               names_to = "status", 
               values_to = "corr") |> 
  mutate(
    status = recode(status, 
                      "er_status" = "Estrogen", 
                      "pr_status" = "Progesteron",
                      "her2_final_status" = "her2")
  ) |> 
  mutate(
    status = factor(status, levels = unique(status)))

Her2_plot <- ggplot(Her2_corr, aes(x = status, y = Protein, fill = corr)) +
  geom_tile(height=0.8, width=0.8) +
    geom_text(aes(label = sprintf("%.2f", corr)), color = "black", size = 3)+
  scale_fill_gradient2(low="blue", mid="white", high="red") +
  theme_minimal() +
  coord_equal() +
  labs(title = "HER2-positive", subtitle = "Correlation of status and protein expression" , x = "Status", y = "Protein", fill = "Correlation") +
  theme(plot.title = element_text(hjust = 0.4, size = 12),
        axis.text.x = element_text(size = 8, angle = 45, vjust = 1, hjust = 1, margin = margin(-3, 0, 0, 0)),
        axis.text.y = element_text(size = 8, margin = margin(0, -3, 0, 0)),
        panel.grid.major = element_blank())


Her2_plot


ggsave("../plots/corr_Her2.png", Her2_plot, height = 6, width = 5)

```




Luminal A
```{r}
length(Luminal_A_sign)
Luminal_A_sign[c(1:10)]

Luminal_A_prot <- full_data |>
  select(c(id, er_status, pr_status, her2_final_status, Luminal_A_sign[c(1:10)])) |>   drop_na()


Luminal_A_corr <- correlate(Luminal_A_prot, method = "kendall") |>
  focus(er_status, pr_status, her2_final_status)

Luminal_A_corr <- Luminal_A_corr |> 
  dplyr::rename(Protein = term) |>   
  pivot_longer(cols = ends_with("status"),
               names_to = "status", 
               values_to = "corr") |> 
  mutate(
    status = recode(status, 
                      "er_status" = "Estrogen", 
                      "pr_status" = "Progesteron",
                      "her2_final_status" = "her2")
  ) |> 
  mutate(
    status = factor(status, levels = unique(status)))

Luminal_A_plot <- ggplot(Luminal_A_corr, aes(x = status, y = Protein, fill = corr)) +
  geom_tile() +
    geom_text(aes(label = sprintf("%.2f", corr)), color = "black", size = 3)+
  scale_fill_gradient2(low="blue", mid="white", high="red") +
  theme_minimal() +
  labs(title = "Luminal A", subtitle = "Correlation of status and protein expression" , x = "Status", y = "Protein", fill = "Correlation") +
  theme(plot.title = element_text(hjust = 0.4, size = 12),
        axis.text.x = element_text(size = 8, angle = 45, vjust = 1, hjust = 1, margin = margin(-3, 0, 0, 0)),
        axis.text.y = element_text(size = 8, margin = margin(0, -3, 0, 0)),
        panel.grid.major = element_blank())


Luminal_A_plot


ggsave("../plots/corr_LumA.png", Luminal_A_plot, height = 5, width = 8)

```



Luminal B
```{r}
length(Luminal_B_sign)

Luminal_B_prot <- full_data |>
  select(c(id, er_status, pr_status, her2_final_status, Luminal_B_sign)) |>   drop_na()


Luminal_B_corr <- correlate(Luminal_B_prot, method = "kendall") |>
  focus(er_status, pr_status, her2_final_status)

Luminal_B_corr <- Luminal_B_corr |> 
  dplyr::rename(Protein = term) |>   
  pivot_longer(cols = ends_with("status"),
               names_to = "status", 
               values_to = "corr") |> 
  mutate(
    status = recode(status, 
                      "er_status" = "Estrogen", 
                      "pr_status" = "Progesteron",
                      "her2_final_status" = "her2")
  ) |> 
  mutate(
    status = factor(status, levels = unique(status)))

Luminal_B_plot <- ggplot(Luminal_B_corr, aes(x = status, y = Protein, fill = corr)) +
  geom_tile(height = 0.8, width = 0.8) +
    geom_text(aes(label = sprintf("%.2f", corr)), color = "black", size = 3)+
  scale_fill_gradient2(low="blue", mid="white", high="red") +
  theme_minimal() +
  labs(title = "Luminal B", subtitle = "Correlation of status and protein expression" , x = "Status", y = "Protein", fill = "Correlation") +
  theme(plot.title = element_text(hjust = 0.4, size = 12),
        axis.text.x = element_text(size = 8, angle = 45, vjust = 1, hjust = 1, margin = margin(-3, 0, 0, 0)),
        axis.text.y = element_text(size = 8, margin = margin(0, -3, 0, 0)),
        panel.grid.major = element_blank())


Luminal_B_plot


ggsave("../plots/corr_LumB.png", Luminal_B_plot, height = 5, width = 8)

```