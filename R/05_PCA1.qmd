---
title: "05_PCA"
format: html
editor: visual
---

# Clustering analysis with all proteomics data

## Principal component analysis (PCA)

It was investigated if the data set would show any clustering resembling that of the PAM50 criteria, based on the entire proteomics data set. First a PCA analysis was conducted.

First, required packages were loaded.

```{r}
#| echo: false
#| label: load packages

library(tidyverse)
library(broom)
library(cowplot)

```

Next, the required data was loaded. For this analysis it was the count matrix, which was transformed (rows to columns and vice versa), and the clinical data.

```{r}
#| label: load data (and augment)

cm <- read.table("../data/count_matrix_1_77.tsv", header = T) |>
  pivot_longer(cols = -id, names_to = 'variable', values_to = 'value') |>
  pivot_wider(names_from = id, values_from = value) |>
  rename(id = variable) |>
  column_to_rownames('id')

clinical_data <- read.table("../data/clinical_data.tsv", sep = "\t", header = T)
```

Next, the PCA was done by first scaling the count matrix, and then the doing the actual principal component analysis using the prcomp() function. From the pca output, information about the variance-explanation by each principel component was extracted and stored in the pca_results using the tidy() function.

```{r}
#| label: define PCA

#Create a PCA object scaling the data
pca <- cm |>
        scale() |>
        stats::prcomp()

#Extract variance explained by the PCs
pca_results <- pca |>
  broom::tidy("pcs")

pc1var <- pca_results$percent[1]*100
pc2var <- pca_results$percent[2]*100
```

These variables, were used for creating a visual presentation of the principal component analysis, in the form of a classic PCA plot of the first to principal components. Here the individual samples were coloured based on their pam50 classification.

```{r}
#| label: PCA plot

# Create PCA plot
pca_plot <- pca |> 
  augment(clinical_data) |>
   ggplot(aes(x=.fittedPC1, 
              y=.fittedPC2, 
              color = pam50,
              fill = pam50)) +
   geom_point(shape = 21,
             size = 2,
             alpha = 0.5) +
   theme_half_open(12) + 
   theme(plot.title = element_text(hjust = 0.5)) +
   background_grid() +
   xlab(paste('PC1,', pc1var, '% explained variance')) + 
   ylab(paste('PC2,', pc2var, '% explained variance')) +
   labs(
     title = "Initial PCA on entire proteomics dataset",
     color = "pam50"
        )

# print PCA plot
pca_plot
```

In this PCA based on all the proteomics data, we see no obvious clustering.
